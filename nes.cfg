MEMORY 
{
MEM_00:  start = $8000, size = $4010, fill = yes, fillval = $00 ;
MEM_01:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_02:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_03:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_04:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_05:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_06:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_07:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_08:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_09:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0A:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0B:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0C:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0D:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0E:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_0F:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_10:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_11:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_12:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_13:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_14:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_15:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_16:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_17:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_18:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_19:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1A:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1B:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1C:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1D:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1E:  start = $8000, size = $4000, fill = yes, fillval = $00 ;
MEM_1F:  start = $C000, size = $4000, fill = yes, fillval = $00 ;
}

SEGMENTS 
{
BANK_00:    load = MEM_00, type = ro, align = $4000;
BANK_01:    load = MEM_01, type = ro, align = $4000;
BANK_02:    load = MEM_02, type = ro, align = $4000;
BANK_03:    load = MEM_03, type = ro, align = $4000;
BANK_04:    load = MEM_04, type = ro, align = $4000;
BANK_05:    load = MEM_05, type = ro, align = $4000;
BANK_06:    load = MEM_06, type = ro, align = $4000;
BANK_07:    load = MEM_07, type = ro, align = $4000;
BANK_08:    load = MEM_08, type = ro, align = $4000;
BANK_09:    load = MEM_09, type = ro, align = $4000;
BANK_0A:    load = MEM_0A, type = ro, align = $4000;
BANK_0B:    load = MEM_0B, type = ro, align = $4000;
BANK_0C:    load = MEM_0C, type = ro, align = $4000;
BANK_0D:    load = MEM_0D, type = ro, align = $4000;
BANK_0E:    load = MEM_0E, type = ro, align = $4000;
BANK_0F:    load = MEM_0F, type = ro, align = $4000;
BANK_10:    load = MEM_10, type = ro, align = $4000;
BANK_11:    load = MEM_11, type = ro, align = $4000;
BANK_12:    load = MEM_12, type = ro, align = $4000;
BANK_13:    load = MEM_13, type = ro, align = $4000;
BANK_14:    load = MEM_14, type = ro, align = $4000;
BANK_15:    load = MEM_15, type = ro, align = $4000;
BANK_16:    load = MEM_16, type = ro, align = $4000;
BANK_17:    load = MEM_17, type = ro, align = $4000;
BANK_18:    load = MEM_18, type = ro, align = $4000;
BANK_19:    load = MEM_19, type = ro, align = $4000;
BANK_1A:    load = MEM_1A, type = ro, align = $4000;
BANK_1B:    load = MEM_1B, type = ro, align = $4000;
BANK_1C:    load = MEM_1C, type = ro, align = $4000;
BANK_1D:    load = MEM_1D, type = ro, align = $4000;
BANK_1E:    load = MEM_1E, type = ro, align = $4000;
BANK_FIXED: load = MEM_1F, type = ro, align = $4000;
VECTORS:    load = MEM_1F, type = ro, start = $FFFA;
}

